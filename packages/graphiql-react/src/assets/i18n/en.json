{
  "graphiql": {
    "sidebar": {
      "btn": {
        "refresh_graphql_schema": "Re-fetch GraphQL schema",
        "open_short_keys_dialog": "Open short keys dialog",
        "open_settings_dialog": "Open settings dialog"
      }
    },
    "editor": {
      "tools": {
        "btn": {
          "variables": {
            "label": "Variables"
          },
          "headers": {
            "label": "Headers"
          },
          "open_editor": {
            "tooltip": "Show editor tools"
          },
          "close_editor": {
            "tooltip": "Hide editor tools"
          }
        }
      }
    },
    "toolbar": {
      "btn": {
        "copy_query": {
          "tooltip": "Copy query (Shift-Ctrl-C)"
        },
        "merge_fragment": {
          "tooltip": "Merge fragments into query (Shift-Ctrl-M)"
        },
        "prettify_query": {
          "tooltip": "Prettify query (Shift-Ctrl-P)"
        },
        "execute_query": {
          "tooltip": "Execute query (Ctrl-Enter)"
        },
        "stop_query": {
          "tooltip": "Stop query (Ctrl-Enter)"
        }
      }
    },
    "tab": {
      "btn": {
        "close_tab": {
          "tooltip": "Close tab"
        },
        "add_tab": {
          "tooltip": "Add tab"
        }
      }
    }
  },
  "dialog": {
    "settings": {
      "title": "Settings",
      "language": {
        "title": "Language",
        "description": "Select your preferred language.",
        "btn": {
          "language_selector": {
            "aria_label": "Current language: English (click to change)",
            "item_aria_label": "Select English as the current language"
          }
        }
      },
      "persisted_headers": {
        "title": "Persist headers",
        "description": "Save headers upon reloading. <span class=\"graphiql-warning-text\">Only enable if you trust this device.</span>",
        "btn": {
          "on": "On",
          "off": "Off"
        }
      },
      "theme": {
        "title": "Theme",
        "description": "Adjust how the interface appears.",
        "btn": {
          "system": "System",
          "light": "Light",
          "dark": "Dark"
        }
      },
      "clear_storage": {
        "title": "Clear storage",
        "description": "Remove all locally stored data and start fresh.",
        "btn": {
          "clear_data": "Clear data",
          "cleared_data": "Cleared data",
          "error": "Failed"
        }
      }
    },
    "short_keys": {
      "title": "Short Keys",
      "header": {
        "short_key": "Short key",
        "function": "Function"
      },
      "function": {
        "search_in_editor": "Search in editor",
        "search_in_documentation": "Search in documentation",
        "execute_query": "Execute query",
        "prettify_editors": "Prettify editors",
        "merge_fragments_into_definition": "Merge fragments definitions into operation definition",
        "copy_query": "Copy query",
        "refresh_schema": "Re-fetch schema using introspection"
      },
      "footer": "The editors use <a href=\"https://codemirror.net/5/doc/manual.html#keymaps\" target=\"_blank\" rel=\"noopener noreferrer\" >CodeMirror Key Maps</a> that add more short keys. This instance of Graph<em>i</em>QL uses <code>{{keyMap}}</code>."
    }
  },
  "plugin": {
    "history": {
      "title": "History",
      "name": {
        "placeholder": "Type a label",
        "tooltip": "Set active"
      },
      "btn": {
        "save": "Save",
        "edit_label": {
          "tooltip": "Edit label"
        },
        "add_favorite": {
          "tooltip": "Add favorite"
        },
        "remove_favorite": {
          "tooltip": "Remove favorite"
        },
        "delete_from_history": {
          "tooltip": "Delete from history"
        },
        "clear": {
          "label": "Clear",
          "status": {
            "cleared": "Cleared",
            "failed_to_clear": "Failed to Clear"
          }
        }
      }
    },
    "documentation_explorer": {
      "title": "Documentation Explorer",
      "section": {
        "root_types": {
          "title": "Root Types"
        },
        "fields": {
          "title": "Fields"
        },
        "deprecated_fields": {
          "title": "Deprecated Fields"
        },
        "type": {
          "title": "Type"
        },
        "arguments": {
          "title": "Arguments"
        },
        "deprecated_arguments": {
          "title": "Deprecated Arguments"
        },
        "implements": {
          "title": "Implements"
        },
        "implementations": {
          "title": "Implementations"
        },
        "possible_types": {
          "title": "Possible Types"
        },
        "enum_values": {
          "title": "Enum Values"
        },
        "deprecated_enum_values": {
          "title": "Deprecated Enum Values"
        },
        "directives": {
          "title": "Directives"
        },
        "all_schema_types": {
          "title": "All Schema Types"
        }
      },
      "root_type": {
        "default_description": "A GraphQL schema provides a root type for each kind of operation.",
        "query": "query",
        "mutation": "mutation",
        "subscription": "subscription"
      },
      "argument": {
        "deprecated": "Deprecated"
      },
      "deprecation_reason": {
        "deprecated": "Deprecated"
      },
      "search": {
        "no_result_found": "No results found",
        "other_results": "Other results"
      },
      "btn": {
        "show_deprecated_arguments": "Show Deprecated Arguments",
        "show_deprecated_fields": "Show Deprecated Fields"
      },
      "error": {
        "fetching_schema": "Error fetching schema",
        "invalid_schema": "Schema is invalid: {{errorMessage}}",
        "schema_not_available": "No GraphQL schema available"
      }
    },
    "graphiql_explorer": {
      "title": "GraphiQL Explorer"
    },
    "graphiql-plugin-code-exporter": {
      "title": "GraphiQL Code Exporter"
    },
    "btn": {
      "show_plugin": "Show {{pluginTitle}}",
      "hide_plugin": "Hide {{pluginTitle}}"
    }
  }
}
